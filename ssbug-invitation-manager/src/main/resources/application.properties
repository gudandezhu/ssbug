server.port=8092
#扫描的服务包
dubbo.scan.base-packages=com.ps.invitation.service.impl
#项目名称
spring.application.name=ssbug-invitation-manager

#-----------------dataSource------------
spring.datasource.url=jdbc:mysql://localhost:3306/ssbug?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=1
spring.datasource.initial-size=2

#-----------------mybatis--------------
mybatis.type-aliases-package=com.ps.invitation.domain
mybatis.mapper-locations=classpath:mapper/**
#---------------------Dubbo---------------------
# Dubbo Protocol  (协议)
dubbo.protocol.name=dubbo
# random port
dubbo.protocol.port=-1
## Dubbo Registry
dubbo.registry.address=zookeeper://192.168.3.39:2181
#  自定义 zookeeper 创建的根节点
dubbo.registry.group=ssbug
#dubbo.registry.client=zkclient
#负载均衡设置  random,roundrobin,leastactive  分别表示：随机，轮询，最少活跃调用
dubbo.provider.loadbalance=roundrobin
#导入mvven依赖后打开校验
dubbo.provider.validation=true
#泛化实现 (此配置在服务端设置,表示运行客户端通过泛化引用调用方法  默认false) 是否缺省泛化接口，如果为泛化接口，将返回GenericService
#dubbo.consumer.generic=true

# --------------kafka----------------
spring.kafka.bootstrap-servers=192.168.3.39:9092
#kafka事务 , 随意起名字
#spring.kafka.producer.transaction-id-prefix=.kafka.tx