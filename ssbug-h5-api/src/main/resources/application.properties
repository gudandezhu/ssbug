server.port=8095
#项目名称
spring.application.name=ssbug-h5-api

#-----------------------redis----------------------------------
#spingboot 2.x后默认使用 lettuce作为客户端    jdeis是springboot1.5以前用的
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=0
# 连接超时时间（毫秒）  不设置可能会报错 Command timed out after no timeout
spring.redis.timeout=300

#---------------------Dubbo---------------------
# Dubbo Protocol  (协议)
dubbo.protocol.name=dubbo
# random port
dubbo.protocol.port=-1
#开机检查服务 , 关闭
dubbo.consumer.check=false
## Dubbo Registry
dubbo.registry.address=zookeeper://192.168.3.39:2181
#  自定义 zookeeper 创建的根节点
dubbo.registry.group=ssbug
#dubbo.registry.client=zkclient
#负载均衡设置  random,roundrobin,leastactive  分别表示：随机，轮询，最少活跃调用
dubbo.provider.loadbalance=roundrobin
#导入mvven依赖后打开校验
dubbo.provider.validation=true
#泛化实现 (此配置在服务端设置,表示运行客户端通过泛化引用调用方法  默认false) 是否缺省泛化接口，如果为泛化接口，将返回GenericService
#dubbo.consumer.generic=true

# --------------kafka----------------
spring.kafka.bootstrap-servers=192.168.3.39:9092
#kafka事务 , 随意起名字
#spring.kafka.producer.transaction-id-prefix=.kafka.tx